template: Hello, %s!
defaultName: ${DW_DEFAULT_NAME:-Stranger}

#All client side setting for calling the inventory on server side
CurationConfig:

  vendorId: 89
  vendorUserName: vendor
  vendorPassword: vendor
  maxRowCountForServerPost: 5
  inventoryMasterFileName: /Users/nitesh.garg/Documents/restart/fastlane/src/main/resources/data/inventory_master.csv
  inventoryFileName: /Users/nitesh.garg/Documents/restart/fastlane/src/main/resources/data/inventory_sync.csv
  backupFileNameForInventory: /Users/nitesh.garg/Documents/restart/fastlane/src/main/resources/data/inventory_sync_backup.csv
  statusFileName: /Users/nitesh.garg/Documents/restart/fastlane/src/main/resources/data/sync_status.csv
  lastSyncIdFileName: /Users/nitesh.garg/Documents/restart/fastlane/src/main/resources/data/sync_id.csv
  #For SyncType check Constants file
  # 1 - Time stamp in milliseconds
  lastSyncIdType: 1


# Database settings.
database:

  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: nitesh

  # the password
  password: passwd

  # the JDBC URL
  # url: jdbc:postgresql://127.0.0.1:5432/fastlane
  url: jdbc:postgresql://localhost:5432/fastlane
  
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the timeout before a connection validation queries fail
  validationQueryTimeout: 3s

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute  
  

# use the simple server factory if you only want to run on a single port
#server:
#  type: simple
#  connector:
#    type: http
#    port: 8080

server:
#  softNofileLimit: 1000
#  hardNofileLimit: 1000
  applicationConnectors:
    - type: http
      port: 8080
    - type: https
      port: 8443
      keyStorePath: example.keystore
      keyStorePassword: example
      validateCerts: false
      validatePeers: false
    #this requires the alpn-boot library on the JVM's boot classpath
    #- type: h2
    #  port: 8445
    #  keyStorePath: example.keystore
    #  keyStorePassword: example
    #  validateCerts: false
    #  validatePeers: false
  adminConnectors:
    - type: http
      port: 8081
    - type: https
      port: 8444
      keyStorePath: example.keystore
      keyStorePassword: example
      validateCerts: false
      validatePeers: false

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: DEBUG

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: ERROR
    
    com.example.helloworld: WARN

    # Redirects SQL logs to a separate file
    org.hibernate.SQL:
      level: ERROR
      
    org.hibernate.type:
      level: ERROR

  appenders:
    - type: console
      threshold: ALL
      logFormat: "%-6level [%d{dd HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      timeZone: UTC
    - type: file
      threshold: WARN
      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      currentLogFilename: /tmp/application.log
      archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 7
      timeZone: UTC
      maxFileSize: 10MB

# the key needs to match the suffix of the renderer
viewRendererConfiguration:
    .ftl:
        strict_syntax: yes
        whitespace_stripping: yes

metrics:
  reporters:
    - type: graphite
      host: localhost
      port: 2003
      prefix: example
      frequency: 1000s
